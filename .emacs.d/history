;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history minibuffer-history-search-history read-from-kill-ring-history xref--read-identifier-history TeX-macro-history tex-compile-history read-number-history empty-history face-name-history which-key-keymap-history helm-file-name-history bookmark-history helm-M-x-input-history org--links-history query-replace-history compile-history ess--completing-hist shell-command-history gud-pdb-history imenu--history-list search-ring input-method-history LaTeX-environment-history TeX-command-history org-read-date-history yes-or-no-p-history buffer-name-history minibuffer-history extended-command-history file-name-history))
(setq TeX-macro-history '("cite" "ref" "cite"))
(setq face-name-history '("all faces" "italic" "all faces"))
(setq helm-file-name-history '("UAPO" "run_experiment_1.sh" "plot_outliers.py" "UAPO" "update_agent.py" "plot_outliers.py" "main_trpo.py" "plot_clip.py" "test.py" "UAPO"))
(setq helm-M-x-input-history '("todo" "eshel" "treemacs-ne" "treemacs-cre" "treemacs-add" "themes" "treemacs" "treemacs-mode"))
(setq query-replace-history '("DPO" "PPO" "norm_coef" "kl_coef" "norm_targ" "kl_targ" "Surrogate" "func" "func" "func1"))
(setq compile-history '("gcc noj_7.c -o noj_7" "gcc -o noj_7.c noj_7" "make -k noj_7.c" "gcc noj_4.c -o noj_4" "gcc noj_3.c -o noj_3" "gcc -o noj_3.c noj_3" "gcc -o noj_3.c noj_" "gcc -o noj_3.c a" "gcc noj_3.c -o a" "gcc noj_3.c"))
(setq ess--completing-hist '("/usr/lib/R/library/graphics/help/plot.default"))
(setq shell-command-history '("./noj_7" "./noj_7.c" "./noj_6.c" "./noj_7.c" "./noj_7" "./noj_3" "./noj1" "./nooj1" "./noj1" "./noj_1"))
(setq gud-pdb-history '("pdb "))
(setq imenu--history-list '(#("def" 0 3 (fontified t face font-lock-keyword-face)) "swap.(def)"))
(setq search-ring '(#("augty" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("ga" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("ppo" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("Not" 0 3 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Down" 0 4 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Do" 0 2 (isearch-regexp-function nil isearch-case-fold-search nil)) #("entropy_coef" 0 12 (isearch-case-fold-search t isearch-regexp-function nil)) #("alpha" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("log" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("backward" 0 8 (isearch-regexp-function nil isearch-case-fold-search t)) #("actor" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("optim" 0 5 (isearch-regexp-function nil isearch-case-fold-search t)) #("get_flat" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("ma" 0 2 (isearch-regexp-function nil isearch-case-fold-search t)) #("obs" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("values" 0 6 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq LaTeX-environment-history '("document" "figure" "itemize" "itermize" "itemize" "equation" "itemize" "equation" "itemize" "equation"))
(setq TeX-command-history '("BibTeX" "LaTeX" "View" "LaTeX" "View" "LaTeX"))
(setq org-read-date-history '("   " "30    " "2-26    " "2-25    "))
(setq yes-or-no-p-history '("yes" "y" "yes" "no" "yes" "no" "yes" "no" "yes" "no"))
(setq buffer-name-history '("a2c_acktr.py" "generate_tmux_yaml.py" "main.py" "arguments.py" "main.py" "arguments.py" "distributions.py" "envs.py" "model.py" "utils.py"))
(setq minibuffer-history '("Todo" "baseline" "logo" "pytorch" "/home/magifeeney/Downloads/pytorch-a2c-ppo-acktr-gail_copy/a2c_ppo_acktr/algo/" "ppo.py" "what" "/home/magifeeney/" "/" "article"))
(setq extended-command-history '("eshell" "shell" "todo-show" "helm-M-x" "eshell" "helm-M-x" "shell" "org-latex-export-as-latex" "type-break" "menu-bar-mode"))
(setq file-name-history '("~/.emacs" "~/EARL" "~/EARL/EARL/common" "~/EARL/EARL" "~/EARL" "~/" "~/EARL/EARL" "~/Downloads" "~/EARL.org" "~/todo"))
